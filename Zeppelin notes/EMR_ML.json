{"paragraphs":[{"text":"%pyspark\n# Prepare data from s3 bucket\nfrom pyspark.sql import SQLContext\nfrom pyspark import SparkContext\nsqlContext = SQLContext(sc)\n\ntrain = sqlContext.read.load(\"s3://<your-S3-path>.csv\", format='com.databricks.spark.csv', header='true', \n    delimiter=',', inferSchema='true')\n","user":"anonymous","dateUpdated":"2019-02-20T02:12:11+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7253","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7254"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1550626275854_-1805201664","id":"20190213-082427_1614654583","dateCreated":"2019-02-20T01:31:15+0000","dateStarted":"2019-02-20T01:34:45+0000","dateFinished":"2019-02-20T01:34:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:19399"},{"text":"%pyspark\n# Split data as training & testing data\ntrain_df,test_df=train.randomSplit([0.7,0.3],seed=123)\ntrain_df.cache()\ntest_df.cache()","user":"anonymous","dateUpdated":"2019-02-20T01:34:50+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[loan: string, contact: string, month: string, dayofweek: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, empvarrate: int, conspriceidx: double, consconfidx: double, euribor3m: double, nremployed: double, label: int, age: int, job: string, marital: string, education: string, default: string, housing: string]\n"}]},"apps":[],"jobName":"paragraph_1550626275855_-618627119","id":"20190213-082531_1115510540","dateCreated":"2019-02-20T01:31:15+0000","dateStarted":"2019-02-20T01:34:50+0000","dateFinished":"2019-02-20T01:34:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19400"},{"text":"%pyspark\ntrain_df.show(5)","user":"anonymous","dateUpdated":"2019-02-20T01:34:55+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------+-----+---------+--------+--------+-----+--------+-----------+----------+------------+-----------+---------+----------+-----+---+-----------+--------+-------------------+-------+-------+\n|loan| contact|month|dayofweek|duration|campaign|pdays|previous|   poutcome|empvarrate|conspriceidx|consconfidx|euribor3m|nremployed|label|age|        job| marital|          education|default|housing|\n+----+--------+-----+---------+--------+--------+-----+--------+-----------+----------+------------+-----------+---------+----------+-----+---+-----------+--------+-------------------+-------+-------+\n|  no|cellular|  apr|      fri|       0|       3|  999|       0|nonexistent|        -1|      93.075|      -47.1|    1.479|    5099.1|    0| 53|blue-collar|divorced|        high.school|     no|    yes|\n|  no|cellular|  apr|      fri|      17|       4|  999|       0|nonexistent|        -1|      93.075|      -47.1|    1.405|    5099.1|    0| 36| technician| married|professional.course|     no|    yes|\n|  no|cellular|  apr|      fri|      31|       3|  999|       1|    failure|        -1|      93.075|      -47.1|    1.405|    5099.1|    0| 38| technician|  single|  university.degree|     no|    yes|\n|  no|cellular|  apr|      fri|      33|       2|  999|       0|nonexistent|        -1|      93.075|      -47.1|    1.405|    5099.1|    0| 45|     admin.| married|        high.school|     no|    yes|\n|  no|cellular|  apr|      fri|      36|       1|  999|       0|nonexistent|        -1|      93.075|      -47.1|    1.405|    5099.1|    0| 35|   services| married|        high.school|     no|    yes|\n+----+--------+-----+---------+--------+--------+-----+--------+-----------+----------+------------+-----------+---------+----------+-----+---+-----------+--------+-------------------+-------+-------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7255"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1550626275858_77168903","id":"20190219-093709_1707285735","dateCreated":"2019-02-20T01:31:15+0000","dateStarted":"2019-02-20T01:34:55+0000","dateFinished":"2019-02-20T01:34:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19401"},{"text":"%pyspark\n# Create ML pipeline\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.feature import StringIndexer, OneHotEncoder, VectorAssembler\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier(labelCol=\"label\",featuresCol=\"features\",impurity=\"gini\",maxBins=14)\n\ncols = ['contact', 'loan', 'month', 'dayofweek' , 'poutcome' , 'job', 'marital' , 'education' , 'housing']\n\nindexers = [\n    StringIndexer(inputCol=c, outputCol=\"{0}_indexed\".format(c))\n    for c in cols\n]\n\nencoders = [\n    OneHotEncoder(\n        inputCol=indexer.getOutputCol(),\n        outputCol=\"{0}_encoded\".format(indexer.getOutputCol())) \n    for indexer in indexers\n]\n\nassembler = VectorAssembler(\n    inputCols=[encoder.getOutputCol() for encoder in encoders],\n    outputCol=\"features\"\n)\n\n\ndtpipeline = Pipeline(stages=indexers + encoders + [assembler] + [dt])\ndtpipelineModel = dtpipeline.fit(train_df)\n\n","user":"anonymous","dateUpdated":"2019-02-20T02:19:20+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7277","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7278","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7279","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7280","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7281","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7282","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7283","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7284","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7285","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7286","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7287","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7288","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7290","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7291","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7292","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7293","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7294"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1550626275858_545998198","id":"20190219-101142_918292529","dateCreated":"2019-02-20T01:31:15+0000","dateStarted":"2019-02-20T02:19:20+0000","dateFinished":"2019-02-20T02:19:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19402"},{"text":"%pyspark\n#Build decision tree model\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator\nevaluator = BinaryClassificationEvaluator(rawPredictionCol=\"rawPrediction\",labelCol=\"label\",metricName=\"areaUnderROC\")\npredictions=dtpipelineModel.transform(test_df)\n#predictions.show(2)\nauc=evaluator.evaluate(predictions)\nauc","user":"anonymous","dateUpdated":"2019-02-20T02:19:44+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.3658414908188737\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7295","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7296","http://ip-10-0-1-230.ec2.internal:4040/jobs/job?id=7297"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1550626275860_1776987135","id":"20190213-083028_768121653","dateCreated":"2019-02-20T01:31:15+0000","dateStarted":"2019-02-20T02:19:25+0000","dateFinished":"2019-02-20T02:19:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19403"},{"text":"%pyspark\n#random forest & 3 fold Crossvalidation\nfrom pyspark.ml.classification import RandomForestClassifier\nrf = RandomForestClassifier(labelCol=\"label\",featuresCol=\"features\",numTrees=2)\n#rfpipeline = Pipeline(stages=[indexers,encoder,assembler,rf])\nrfpipeline = Pipeline(stages=indexers + encoders + [assembler] + [rf])\nrfpipelineModel = rfpipeline.fit(train_df)\nrfpredictrd = rfpipelineModel.transform(test_df)\nevaluator.evaluate(rfpredictrd)\nfrom pyspark.ml.tuning import CrossValidator,ParamGridBuilder\nparamGrid = ParamGridBuilder()\\\n    .addGrid(rf.impurity,[\"gini\",\"entropy\"])\\\n    .addGrid(rf.maxBins,[10,15,20])\\\n    .addGrid(rf.maxDepth,[5,10,15])\\\n    .addGrid(rf.numTrees,[10,20,30])\\\n    .build()\n\nrfcv = CrossValidator(estimator=rf,evaluator=evaluator,estimatorParamMaps=paramGrid,numFolds=2)\nrfcv_pipeline = Pipeline(stages=indexers + encoders + [assembler] + [rfcv])\nrfcv_pipeline_Model = rfcv_pipeline.fit(train_df)\n#bestModel = rfcv_pipeline_Model.stages[3].bestModel\n#bestModel\npredictions=rfcv_pipeline_Model.transform(test_df)\n#predictions.show(2)\nauc=evaluator.evaluate(predictions)\nauc","user":"anonymous","dateUpdated":"2019-02-20T01:31:15+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.7721378095905692\n"}]},"apps":[],"jobName":"paragraph_1550626275860_1344844200","id":"20190213-083059_934179173","dateCreated":"2019-02-20T01:31:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19404"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2019-02-20T01:31:15+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550626275861_892071783","id":"20190213-092626_494570329","dateCreated":"2019-02-20T01:31:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19405"}],"name":"EMR ML2","id":"2E398VZK2","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}